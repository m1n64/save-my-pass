// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/user": {
            "get": {
                "description": "Get information about the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get user info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{ 'id': 6, 'name': 'admin', 'email': 'admin@gmail.com' }",
                        "schema": {
                            "$ref": "#/definitions/actions.GetUserResponse"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Log in a user using email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "User Login",
                        "name": "userLoginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/actions.UserLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"token\": \"jakjdslskldaew\"}",
                        "schema": {
                            "$ref": "#/definitions/actions.UserTokenResponse"
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"error\"}",
                        "schema": {
                            "$ref": "#/definitions/services.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"error\"}",
                        "schema": {
                            "$ref": "#/definitions/services.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "Register user by Email, Name and Password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "description": "User Registration",
                        "name": "userRegisterRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/actions.UserRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"token\": \"jakjdslskldaew\"}",
                        "schema": {
                            "$ref": "#/definitions/actions.UserTokenResponse"
                        }
                    },
                    "400": {
                        "description": "{\"error\": \"error\"}",
                        "schema": {
                            "$ref": "#/definitions/services.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "{\"error\": \"error\"}",
                        "schema": {
                            "$ref": "#/definitions/services.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "actions.GetUserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "actions.UserLoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "actions.UserRegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "actions.UserTokenResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "services.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Save My Pass - API",
	Description:      "This is a Save My Pass API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
